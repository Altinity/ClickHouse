# yamllint disable rule:comments-indentation
name: ReleaseBranchCI

env:
  # Force the stdout and stderr streams to be unbuffered
  PYTHONUNBUFFERED: 1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

on: # yamllint disable-line rule:truthy
  pull_request:
    types:
      - synchronize
      - reopened
      - opened
    branches:
      # Anything/23.8 (e.g customizations/23.8.x)
      - '**/23.8*'
  release:
    types:
      - published
      - prereleased
  push:
    branches:
      - 'releases/23.8**'

jobs:
  DockerHubPushAarch64:
    runs-on: [self-hosted, style-checker, on-demand, type-cax41, in-fsn1, image-arm-app-docker-ce]
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          clear-repository: true

      - name: Common docker setup
        uses: ./.github/actions/docker_setup
        with:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_images_check.py --suffix aarch64
      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images_aarch64
          path: ${{ runner.temp }}/docker_images_check/changed_images_aarch64.json

  DockerHubPushAmd64:
    runs-on: [self-hosted, style-checker, on-demand, type-cpx51, image-x86-app-docker-ce]
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          clear-repository: true

      - name: Common docker setup
        uses: ./.github/actions/docker_setup
        with:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_images_check.py --suffix amd64
      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images_amd64
          path: ${{ runner.temp }}/docker_images_check/changed_images_amd64.json

  DockerHubPush:
    needs: [DockerHubPushAmd64, DockerHubPushAarch64]
    runs-on: [self-hosted, style-checker, on-demand, type-cpx41, image-x86-app-docker-ce]
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          clear-repository: true
          fetch-depth: 0  # to find ancestor merge commits necessary for finding proper docker tags
          filter: tree:0

      - name: Common docker setup
        uses: ./.github/actions/docker_setup
        with:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download changed aarch64 images
        uses: actions/download-artifact@v3
        with:
          name: changed_images_aarch64
          path: ${{ runner.temp }}

      - name: Download changed amd64 images
        uses: actions/download-artifact@v3
        with:
          name: changed_images_amd64
          path: ${{ runner.temp }}

      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_manifests_merge.py --suffix amd64 --suffix aarch64

      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images
          path: ${{ runner.temp }}/changed_images.json

  CompatibilityCheck:
    needs: [BuilderDebRelease]
    uses: ./.github/workflows/reusable_test.yml
    secrets: inherit
    with:
      test_name: Compatibility check X86
      runner_type: style-checker, on-demand, type-cpx41, image-x86-app-docker-ce
      timeout_minutes: 180
      run_command: |
        cd "$REPO_COPY/tests/ci"
        python3 compatibility_check.py --check-name "Compatibility check (amd64)" --check-glibc --check-distributions

#########################################################################################
#################################### ORDINARY BUILDS ####################################
#########################################################################################
  BuilderDebRelease:
    needs: [DockerHubPush]
    uses: ./.github/workflows/reusable_build.yml
    secrets: inherit
    with:
      build_name: package_release
      checkout_depth: 0
      timeout_minutes: 180
      runner_type: builder, on-demand, type-ccx53, image-x86-app-docker-ce
      additional_envs: |
        CLICKHOUSE_STABLE_VERSION_SUFFIX=altinitystable

  BuilderDebAarch64:
    needs: [DockerHubPush]
    uses: ./.github/workflows/reusable_build.yml
    secrets: inherit
    with:
      build_name: package_aarch64
      checkout_depth: 0
      runner_type: builder, on-demand, type-ccx53, image-x86-app-docker-ce


############################################################################################
##################################### Docker images  #######################################
############################################################################################
  DockerServerImages:
    needs:
      - BuilderDebRelease
      - BuilderDebAarch64
    runs-on: [self-hosted, style-checker, on-demand, type-cpx51, image-x86-app-docker-ce]
    timeout-minutes: 180
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          clear-repository: true
          fetch-depth: 0  # It MUST BE THE SAME for all dependencies and the job itself
          filter: tree:0
      - name: Check docker altinityinfra/clickhouse-server building
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          docker buildx create --use
          python3 docker_server.py --release-type head \
            --image-repo altinityinfra/clickhouse-server --image-path docker/server
          python3 docker_server.py --release-type head \
            --image-repo altinityinfra/clickhouse-keeper --image-path docker/keeper
      - name: Cleanup
        if: always()
        run: |
          docker ps --quiet | xargs --no-run-if-empty docker kill ||:
          docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
          sudo rm -fr "$TEMP_PATH"

############################################################################################
##################################### BUILD REPORTER #######################################
############################################################################################
  BuilderReport:
    if: ${{ success() || failure() }}
    needs:
      - BuilderDebRelease
      - BuilderDebAarch64
    uses: ./.github/workflows/reusable_test.yml
    secrets: inherit
    with:
      test_name: ClickHouse build check
      runner_type: style-checker, on-demand, type-cpx31, image-x86-app-docker-ce
      timeout_minutes: 180
      additional_envs: |
        NEEDS_DATA<<NDENV
        ${{ toJSON(needs) }}
        NDENV
      run_command: |
        cd "$GITHUB_WORKSPACE/tests/ci"
        python3 build_report_check.py "$CHECK_NAME"

  MarkReleaseReady:
    needs:
  #    - BuilderBinDarwin
  #    - BuilderBinDarwinAarch64
      - BuilderDebRelease
      - BuilderDebAarch64
      - SignRelease
    runs-on: [self-hosted, style-checker, on-demand, type-cpx31, image-x86-app-docker-ce]
    timeout-minutes: 180
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          clear-repository: true
      - name: Mark Commit Release Ready
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 mark_release_ready.py

############################################################################################
#################################### INSTALL PACKAGES ######################################
############################################################################################
  InstallPackagesTestRelease:
    needs: [BuilderDebRelease]
    uses: ./.github/workflows/reusable_test.yml
    secrets: inherit
    with:
      test_name: Install packages (amd64)
      runner_type: style-checker, on-demand, type-cpx51, image-x86-app-docker-ce
      run_command: |
        cd "$REPO_COPY/tests/ci"
        python3 install_check.py "$CHECK_NAME"


##############################################################################################
########################### FUNCTIONAl STATELESS TESTS #######################################
##############################################################################################
  FunctionalStatelessTestRelease:
    needs: [BuilderDebRelease]
    uses: ./.github/workflows/reusable_test.yml
    secrets: inherit
    with:
      test_name: Stateless tests (release)
      runner_type: func-tester, on-demand, type-cpx51, image-x86-snapshot-docker_ipv6_x86
      additional_envs: |
        KILL_TIMEOUT=10800
      run_command: |
        cd "$REPO_COPY/tests/ci"
        python3 functional_test_check.py "$CHECK_NAME" "$KILL_TIMEOUT"

  FunctionalStatelessTestAarch64:
    needs: [BuilderDebAarch64]
    uses: ./.github/workflows/reusable_test.yml
    secrets: inherit
    with:
      test_name: Stateless tests (aarch64)
      runner_type: func-tester, on-demand, type-cax41, image-arm-snapshot-docker_ipv6_arm
      additional_envs: |
        KILL_TIMEOUT=10800
      run_command: |
        cd "$REPO_COPY/tests/ci"
        python3 functional_test_check.py "$CHECK_NAME" "$KILL_TIMEOUT"


##############################################################################################
############################ FUNCTIONAl STATEFUL TESTS #######################################
##############################################################################################
  FunctionalStatefulTestRelease:
    needs: [BuilderDebRelease]
    uses: ./.github/workflows/reusable_test.yml
    secrets: inherit
    with:
      test_name: Stateful tests (release)
      runner_type: func-tester, on-demand, type-cpx51, image-x86-snapshot-docker_ipv6_x86
      additional_envs: |
        KILL_TIMEOUT=3600
      run_command: |
        cd "$REPO_COPY/tests/ci"
        python3 functional_test_check.py "$CHECK_NAME" "$KILL_TIMEOUT"

  FunctionalStatefulTestAarch64:
    needs: [BuilderDebAarch64]
    uses: ./.github/workflows/reusable_test.yml
    secrets: inherit
    with:
      test_name: Stateful tests (aarch64)
      runner_type: func-tester, on-demand, type-cax41, image-arm-snapshot-docker_ipv6_arm
      additional_envs: |
        KILL_TIMEOUT=3600
      run_command: |
        cd "$REPO_COPY/tests/ci"
        python3 functional_test_check.py "$CHECK_NAME" "$KILL_TIMEOUT"


#############################################################################################
############################# INTEGRATION TESTS #############################################
#############################################################################################
  IntegrationTestsRelease:
    needs: [BuilderDebRelease]
    uses: ./.github/workflows/reusable_test.yml
    secrets: inherit
    with:
      test_name: Integration tests (release)
      runner_type: self-hosted, altinity-on-demand, altinity-type-cpx51, altinity-in-ash, altinity-image-x86-app-docker-ce
      batches: 6
      run_command: |
        cd "$REPO_COPY/tests/ci"
        python3 integration_test_check.py "$CHECK_NAME"

#############################################################################################
##################################### REGRESSION TESTS ######################################
#############################################################################################
  RegressionTestsRelease:
    needs: [BuilderDebRelease]
    uses: ./.github/workflows/regression.yml
    secrets: inherit
    with:
      runner_type: regression-tester, on-demand, type-cpx51, image-x86-app-docker-ce
      commit: 09db6160aac30e37169797b73fac77b4cbca41c6
      arch: release

  RegressionTestsAarch64:
    needs: [BuilderDebAarch64]
    uses: ./.github/workflows/regression.yml
    secrets: inherit
    with:
      runner_type: regression-tester, on-demand, type-cax41, image-arm-app-docker-ce
      commit: 09db6160aac30e37169797b73fac77b4cbca41c6
      arch: aarch64

  SignRelease:
    needs: [BuilderDebRelease]
    runs-on: [self-hosted, on-demand, type-cpx41, image-x86-app-docker-ce]
    timeout-minutes: 180
    steps:
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          TEMP_PATH=${{runner.temp}}/signed
          REPORTS_PATH=${{runner.temp}}/reports_dir
          EOF
      - name: Clear repository
        run: |
          sudo rm -fr "$GITHUB_WORKSPACE" && mkdir "$GITHUB_WORKSPACE"
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Download json reports
        uses: actions/download-artifact@v2
        with:
          path: ${{ env.REPORTS_PATH }}
      - name: Sign release
        env:
          GPG_BINARY_SIGNING_KEY: ${{ secrets.GPG_BINARY_SIGNING_KEY }}
          GPG_BINARY_SIGNING_PASSPHRASE: ${{ secrets.GPG_BINARY_SIGNING_PASSPHRASE }}
          REPORTS_PATH: ${{ env.REPORTS_PATH }}
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 sign_release.py
      - name: Upload signed hashes
        uses: actions/upload-artifact@v2
        with:
          name: signed-hashes
          path: ${{ env.TEMP_PATH }}/*.gpg
      - name: Cleanup
        if: always()
        run: |
          docker ps --quiet | xargs --no-run-if-empty docker kill ||:
          docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
          sudo rm -fr "$TEMP_PATH"

  ###########################################################################################
  ################################ FINISH CHECK #############################################
  ###########################################################################################
  FinishCheck:
    needs:
      - DockerHubPush
      - DockerServerImages
      - BuilderReport
      # - BuilderSpecialReport
      - MarkReleaseReady
      - FunctionalStatelessTestRelease
      - FunctionalStatelessTestAarch64
      - FunctionalStatefulTestRelease
      - FunctionalStatefulTestAarch64
      - IntegrationTestsRelease
      - CompatibilityCheck
      - RegressionTestsRelease
      # - RegressionTestsAarch64
      - SignRelease
    runs-on: [self-hosted, style-checker, on-demand, type-cpx31, image-x86-app-docker-ce]
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          clear-repository: true
      - name: Finish label
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 finish_check.py
